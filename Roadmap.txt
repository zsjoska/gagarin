== M1 ==
Generic implementation.

=== M1 Summary ===
I have the base of the server, WS layer and a standard LiftWeb Admin UI.
Weak permission management

== M2 ==
Generic implementation.

=== M2 Summary ===
 - Group support
 - Input validation standardization
 - Stronger owner based permission framework
 - Admin UI improvements

== M3 ==
Generic implementation.

=== M3 Summary ===

 F002: Flexible custom fields with cleartext mapping
 
  F002A: have an extensible support for tables with custom fields
  F002B: store the custom fields in cleartext and BLOB

 F009: Extra user information
 
  F009A: Implement storage of extra user information
  F009B: Implement caching of extra info at login
  F009C: Implement adminUI for extra User info

== Feature Pool ==

 F001: Authentication improvements
 
  F001A: allow multiple authenticators
  F001B: implement support for lazy account creation
  F001C: modify internal authentication to store only the hash of the password

 F002: Flexible custom fields with cleartext mapping
 
  F002C: have a mapping file which describes join between custom field and cleartext column
  
 F003: Server properties support on WS layer
 
  F003A: Define a WS data structure to allow generic name-value pair retrieval
  F003B: create WS method to retrieve the server properties
  F003C: implement module version definition

 F004: Improve Executor
 
  F004A: allow instant async execution
  F004B: add progress estimation support
  F004C: add WS method and required data structures to export the current jobs
  
 F005: Don't generate WSDL files
 
   F005A: create by hand the WSDL files
   F005B: modify the WS layer to extend the interfaces generated from the WSDL files
   F005C: document the WSDL
   
 F006: Improve the configuration handling
 
  F006A: registration to be scoped for config entry
  F006B: create a set of cache fields and update through reflection

 F007: Improve logging
  
  F007A: review and fix logging to DB (log levels, caching, etc)
  F007B: implement support for detail logging for a user
 
 F008: Add support for quota
 
  F008A: storage quota
  F008B: action quota

 F010: Implement caching
 
  F010A: Create CacheManager
  F010B: Create generic cache class base and cache implementations. The cache should be able to query the value if not found in cache
  F010C: Add method to Session to retrieve registered cached values

 F011: Implement database connection pool

  F011A: Need to have a custom caching pool for database connections
  F011B: The connection count should be configurable
  F011C: The pool should allow sharing a connection for query operation
  F011D: The pool should allow exclusive get for update queries
